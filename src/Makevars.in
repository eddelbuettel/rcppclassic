# -*- mode: Makefile; tab-width: 8 -*-
#
# Makevars for RcppClassic
#
# Copyright (C) 2008 - 2009  Dirk Eddelbuettel <edd@debian.org>
# Copyright (C) 2008         Simon Urbanek <simon.urbanek@r-project.org>
# Copyright (C) 2009 - 2010  Dirk Eddelbuettel and Romain Francois
# Copyright (C) 2015 - 2025  Dirk Eddelbuettel <edd@debian.org>

## $(SHLIB) is the usual default target that is built automatically from all source
## files in this directory. userLibrary is an additional target for the second library
## that will be installed in ../inst/lib$(R_ARCH) and which users can link against.
## PS $(R_ARCH) matter eg when Windows still has 32 and 64 architectures

all: 	        $(SHLIB) userLibrary

## on macOS we can differentiate between 'arm64' and 'x86_64'
## we use presence of install_name_tool to detect macOS
## and then construct either '/arm64' or '/x86_64'
## otherwise it is an empty string ''
# MACHINE =	`if test -e /usr/bin/install_name_tool & test -e /bin/uname; then echo -n '/' && uname -m; else echo -n ''; fi`
MACHINE =       @MACHINE@
ARCH =          @ARCH@
USERDIR =       @USERDIR@
LIBDIR =        @LIBDIR@

## we place it inside the inst/ directory so that it gets installed by the package
#USERDIR =	../inst/lib$(MACHINE)

USERLIB	=	libRcppClassic$(DYLIB_EXT)
USERLIBST =	libRcppClassic.a

PKG_CPPFLAGS =  -I../inst/include/

userLibrary: 	$(USERLIB) $(USERLIBST)
		-@if test ! -e $(USERDIR)$(R_ARCH); then mkdir -p $(USERDIR)$(R_ARCH); fi
		@cp $(USERLIB) $(USERLIBST) $(USERDIR)$(R_ARCH)
		@rm $(USERLIB) $(USERLIBST)

$(USERLIB): 	$(OBJECTS)
		$(SHLIB_CXXLD) -o $(USERLIB) $^ $(SHLIB_CXXLDFLAGS) $(ALL_LIBS)
		@if test -e "/usr/bin/install_name_tool"; then /usr/bin/install_name_tool -add_rpath @loader_path/../lib$(R_ARCH) $(USERLIB); fi
#		@if test -e "/usr/bin/strip" & test -e "/bin/uname" & [[ `uname` == "Linux" ]]; then /usr/bin/strip --strip-unneeded $(USERLIB); fi

$(USERLIBST): 	$(OBJECTS)
		$(AR) qc $(USERLIBST) $^
		@if test -n "$(RANLIB)"; then $(RANLIB) $(USERLIBST); fi
#		@if test -e "/usr/bin/strip" & test -e "/bin/uname" & [[ `uname` == "Linux" ]]; then /usr/bin/strip --strip-unneeded $(USERLIBST); fi

.PHONY: 	all clean userLibrary

clean:
		rm -f $(OBJECTS) $(SHLIB) $(USERLIB) $(USERLIBST)
